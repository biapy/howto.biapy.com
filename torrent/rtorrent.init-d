#!/bin/bash
### BEGIN INIT INFO
# Provides:       rtorrent
# Required-Start:  $local_fs $network 
# Required-Stop:   $local_fs $network 
# Default-Start:   2 3 4 5
# Default-Stop:    0 1 6
# Short-Description: Start rtorrent as a daemon
### END INIT INFO

# Based on: https://github.com/mjsilva/rtorrent-screen-debian-init-script/blob/master/rtorrent
NAME='rtorrent'
DESC='Torrent command line client'
DAEMON="${NAME}"
SCRIPTNAME="/etc/init.d/${NAME}"
PIDFILE="/var/run/${NAME}.pid"

#######################
##Start Configuration##
#######################
#Do not put a space on either side of the equal signs e.g.
# user = user 
# will not work
# system user to run as
USER="www-data"

# the system group to run as, not implemented, see d_start for beginning implementation
# group=`id -ng "$user"`
GROUP="www-data"

# the full path to the filename where you store your rtorrent configuration
RTORRENTRC="/etc/rtorrent.rc"

# Rtorrent nice level
NICE_OPTIONS="-n 19"

# screen session name
SESSION_NAME="${NAME}-${USER}"


#######################
###END CONFIGURATION###
#######################

# Read configuration variable file if it is present
[ -r "/etc/default/${NAME}" ] && . "/etc/default/${NAME}"

# Load the VERBOSE setting and other rcS variables
. /lib/init/vars.sh

# Define LSB log_* functions.
# Depend on lsb-base (>= 3.2-14) to ensure that this file is present
# and status_of_proc is working.
. /lib/lsb/init-functions


start() {
  log_daemon_msg "Starting torrent command line client" "${NAME}"

  if [ -z "$(sudo -u "${USER}" screen -list 2>'/dev/null' | grep "${SESSION_NAME}")" ]; then
    sudo -u "${USER}" screen -fn -dmUS "${SESSION_NAME}" \
              nice ${NICE_OPTIONS} \
              ${DAEMON} -n -o import="${RTORRENTRC}"
    log_end_msg $?
  else
    log_action_msg " already running"
  fi
}

stop() {
  log_daemon_msg "Stopping torrent command line client" "${NAME}"
  if [ -n "$(sudo -u "${USER}" screen -list 2>'/dev/null' | grep "${SESSION_NAME}")" ]; then
   sudo -u "${USER}" screen -S "${SESSION_NAME}" -X 'quit' 2>'/dev/null'
    log_end_msg $?
  else
    log_action_msg " not running"
  fi
}

#End Functions
#Script

case "$1" in
  start)
    start
    ;;

  stop)
    stop
    ;;

  restart|force-reload)
    stop
    sleep 1
    start
    ;;

  *)
    echo "Usage: ${SCRIPTNAME} {start|stop|restart|force-reload}" >&2
    exit 1
    ;;
esac

exit 0
